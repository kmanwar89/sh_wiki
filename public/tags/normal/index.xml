<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Normal Tag on /r/SelfHosted Official Wiki</title>
    <link>http://localhost/tags/normal/</link>
    <description>Recent content in Normal Tag on /r/SelfHosted Official Wiki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="http://localhost/tags/normal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Difficulty Tiers</title>
      <link>http://localhost/getting-started/difficulty-tiers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/getting-started/difficulty-tiers/</guid>
      <description>How hard is stuff? Stuff can be hard. Stuff can also be easy. Some things here are hard. Some things are easy. Let&amp;rsquo;s define some difficulty tiers.
Easy / Basic No worries here, folks! Everything should be done with a GUI with maybe some stuff needing a command or two, or maybe just editing some text files. Instructions should come in picture form.
Operating systems in this tier are Ubuntu Linux, Windows, or OS X.</description>
    </item>
    
    <item>
      <title>Docker Primer</title>
      <link>http://localhost/guides/devops-toolchains/docker/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/guides/devops-toolchains/docker/introduction/</guid>
      <description>Introduction This guide will provide a cursory, high-level overview of Docker. This is not intended to replace the official Docker documentation, but is instead meant to distill the contents into an easy-to-read format, specifically aimed at self hosters.
Docker is available on all Windows, Mac and Linux, but is used most often on Linux machines. Both Mac and Windows have a graphical interface called Docker Desktop which can be used to interface with containers.</description>
    </item>
    
    <item>
      <title>Gitlab Installation</title>
      <link>http://localhost/guides/devops-toolchains/gitlab-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/guides/devops-toolchains/gitlab-kubernetes/</guid>
      <description>Introduction In this article, I will describe all the steps required to setup GitLab CI/CD in kuberntes using kustomize. We will go through how to run GitLab on Kubernetes when you have related resources postgres, redis, minio, tls certificates etc already available in your setup.
This is a very common scenario in companies and also for self-hosting that you are already using these services in your environment and prefer to use the same for gitlab.</description>
    </item>
    
    <item>
      <title>Nginx Reverse Proxy</title>
      <link>http://localhost/guides/reverse-proxy-servers/nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/guides/reverse-proxy-servers/nginx/</guid>
      <description>What is a reverse proxy? To learn what a reverse proxy is and why you should use one, read the explanation here.
Prerequisites There are some prerequisites you&amp;rsquo;ll need before setting up a reverse proxy server. The first thing you&amp;rsquo;ll need is to have port 80 and 443 of your public IP address forwarded to the machine you want to use as a proxy. This can be configured through your router&amp;rsquo;s admin page.</description>
    </item>
    
    <item>
      <title>WireGuard</title>
      <link>http://localhost/guides/virtual-private-networks/wireguard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/guides/virtual-private-networks/wireguard/</guid>
      <description>WireGuard is a secure VPN tunnel that aims to provide a VPN that is easy to use, fast, and with low overhead.
It is cross-platform, but it is the part of the Linux kernel by default with only the need of userland tools to configure and deploy it.
Preface From now on, we are going to assume that we are working on Linux to configure WireGuard with one server and at least one client.</description>
    </item>
    
  </channel>
</rss>
